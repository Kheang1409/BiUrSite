name: CI/CD Pipeline

on:
  push:
    branches:
      - test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up .NET SDK
      - name: Set up .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0'

      # List directory contents for debugging
      - name: List backend directory contents
        run: |
          ls -la ./backend

      # Restore dependencies (ensure you are in the correct directory)
      - name: Restore dependencies
        run: |
          cd backend
          dotnet restore ./BiUrSite.sln  # Or use ./API/API.csproj if no solution file is used

      # Build the backend
      - name: Build backend
        run: |
          cd backend
          dotnet build --configuration Release --no-restore

      # Build the frontend
      - name: Build frontend
        run: |
          cd frontend
          npm install
          npm run build

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

      # Build and push Docker images
      - name: Build and push Docker images
        run: |
          docker build -f backend/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest ./  # Ensure correct build context
          docker build -f frontend/Dockerfile -t ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/backend:latest
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/frontend:latest
